''' Модуль для розрахунку результатів проби Руф’є.
 
Сума вимірювань пульсу у трьох спробах (до навантаження, одразу після та після короткого відпочинку)
в ідеалі має бути не більше 200 ударів на хвилину.
Ми пропонуємо дітям вимірювати свій пульс протягом 15 секунд,
і наводимо результат до ударів за хвилину множенням на 4:
    S = 4* (P1 + P2 + P3)
Що далі цей результат від ідеальних 200 ударів, то гірше.
Традиційно таблиці даються для величини, поділеної на 10.

Індекс Руф’є  
   IR = (S - 200) / 10
оцінюється за таблицею відповідно до віку:
       7-8             9-10                11-12               13-14               15+ (только для подростков!)
отл.    6.4 і менше    4.9 і менше       3.4 і менше         1.9 і менше          0.4 і менше
доб.    6.5 - 11.9     5 - 10.4          3.5 - 8.9           2 - 7.4              0.5 - 5.9
задов.  12 - 16.9      10.5 - 15.4       9 - 13.9            7.5 - 12.4           6 - 10.9
слабкий 17 - 20.9      15.5 - 19.4       14 - 17.9           12.5 - 16.4          11 - 14.9
незад.  21 і більше    19.5 і більше     18 і більше         16.5 і більше        15 і більше

для всіх вікових груп результат "незад." відстоїть від "слабкий" на 4,
той від "задовільного" на 5, а "добрий" від "задов." - на 5.5

тому напишемо функцію ruffier_result(r_index, level), яка отримуватиме
розрахований індекс Руф'є та рівень "незадовільно" для віку тестованого, і віддавати результат
'''

# тут задаються рядки, за допомогою яких викладено результат
txt_index = "Ваш індекс Руф'є: "
txt_workheart = "Працездатність серця: "
txt_nodata = "немає даних для такого віку"
txt_res = [] 
txt_res.append("низька. Терміново зверніться до лікаря!")
txt_res.append("задовільна. Зверніться до лікаря!")
txt_res.append("середня. Можливо, варто додатково обстежитись у лікаря.")
txt_res.append("вище середнього")
txt_res.append("висока")


#повертає значення індексу за трьома показниками пульсу для звірки з таблицею
def ruffier_index(P1, P2, P3):
    return (4 * (P1+P2+P3) - 200) / 10


#варіанти з віком менше 7 і дорослим треба обробляти окремо, тут підбираємо рівень "незадовільно" тільки всередині таблиці:
#у віці 7 років "незад." - це індекс 21, далі кожні 2 роки він знижується на 1.5 до значення 15 в 15-16 років
def neud_level(age):
    norm_age = (min(age, 15) - 7) // 2  # кожні 2 роки різниці від 7 років перетворюються на одиницю - аж до 15 років
    result = 21 - norm_age * 1.5 # множимо кожні 2 роки різниці на 1.5, так розподілені рівні у таблиці
    return result 
    

#функція отримує індекс Руф’є і інтерпретує його, повертає рівень готовності: число від 0 до 4 (що вище рівень готовності, то краще).
def ruffier_result(r_index, level):
    if r_index >= level:
        return 0
    level = level - 4 # це не буде виконуватися, якщо ми вже повернули відповідь "незадовільно"
    if r_index >= level:
        return 1
    level = level - 5 # аналогічно, потрапляємо сюди, якщо рівень як мінімум "задов."
    if r_index >= level:
        return 2
    level = level - 5.5 # наступний рівень
    if r_index >= level:
        return 3
    return 4 # тут виявилися, якщо індекс менше від усіх проміжних рівнів, тобто. тестований крут.


#цю функцію можна використовувати зовні модуля для підрахунків індексу Руф’є. Повертає готові тексти, які залишається намалювати у потрібному місці
#Використовує для текстів константи, задані на початку цього модуля.
def test(P1, P2, P3, age):
    if age < 7:
        return (txt_index + "0", txt_nodata) 
    else:
        ruff_index = ruffier_index(P1, P2, P3) # розрахунок
        result = txt_res[ruffier_result(ruff_index, neud_level(age))] # інтерпретація, переведення числового рівня підготовки до текстових даних
        res = txt_index + str(ruff_index) + '\n' + txt_workheart + result
        return res